#!/usr/bin/env bash

SPECFILE="tsmuxer.spec"

set -e

#  Get the full path to the spec file
SPECFILE=$(dirname "$(realpath "$0")")/$SPECFILE

#  Parse the package name, version and release out of the spec file
NAME=$(sed -n 's/^Name:[[:space:]]*//p' "$SPECFILE")
VERSION=$(sed -n 's/^Version:[[:space:]]*//p' "$SPECFILE")
RELEASE=$(sed -n 's/^Release:[[:space:]]*//;s/%{?dist}//p' "$SPECFILE")

if [ $(cat /etc/hostname) == "fang.localdomain" ]; then
        echo "Building $NAME in fedora-rpmbuild:30 container ..."
        podman run --interactive --name=rpmbuild --rm --tty --volume=${HOME}:${HOME} localhost/fedora-rpmbuild:30 "$(realpath "$0")"
        echo "Building $NAME in fedora-rpmbuild:31 container ..."
        podman run --interactive --name=rpmbuild --rm --tty --volume=${HOME}:${HOME} localhost/fedora-rpmbuild:31 "$(realpath "$0")"
	#  The version number set in the SPEC file may have changed during the build so get it again 
	VERSION=$(sed -n 's/^Version:[[:space:]]*//p' "$SPECFILE")

	echo "Test installation of RPM in fedora-rpmbuild:30 container ..."
	podman run --interactive --name=rpmbuild --rm --tty --volume=${HOME}:${HOME} localhost/fedora-rpmbuild:30 dnf install -y ${HOME}/rpmbuild/RPMS/x86_64/${NAME}-${VERSION}-${RELEASE}.fc30.x86_64.rpm

	echo "Test installation of RPM in fedora-rpmbuild:31 container ..."
	podman run --interactive --name=rpmbuild --rm --tty --volume=${HOME}:${HOME} localhost/fedora-rpmbuild:31 dnf install -y ${HOME}/rpmbuild/RPMS/x86_64/${NAME}-${VERSION}-${RELEASE}.fc31.x86_64.rpm
else
        echo "Update system software ..."
        dnf -y upgrade
	dnf -y install wget ninja-build cmake zlib-devel freetype-devel qt5-devel

	#  Clone the source from git into a temp file
	TMPDIR=$(mktemp -d)
	cd $TMPDIR
	git clone https://github.com/justdan96/tsMuxer.git

	#  Get the program version number from the code
	VERSION=$(grep "APP_VERSION =" tsMuxer/tsMuxer/main.cpp | sed 's/[^"]*"\([^"]*\)".*/\1/')

	#  Modify the spec file to set the current version number
	sed -i "s/^Version:.*/Version:\t${VERSION}/" "$SPECFILE"

	#  Build a tar.gz archive of the source code and put it in our SOURCES dir
	cd tsMuxer
	git archive --format=tar.gz --prefix=${NAME}-${VERSION}/ --output=${HOME}/rpmbuild/SOURCES/${NAME}-${VERSION}.tar.gz master

	#  Put the desktop file in the SOURCES directory
	SOURCE1=$(sed -n 's/^Source1:[[:space:]]*//p' "$SPECFILE")
	wget -O ${HOME}/rpmbuild/SOURCES/tsMuxerGUI.desktop "$SOURCE1"

	#  Build the packages
	rpmbuild -ba "$SPECFILE"

	echo "Copying RPM files to host system ..."
	mv /root/rpmbuild/RPMS/x86_64/*.rpm /home/dlk/rpmbuild/RPMS/x86_64/
	mv /root/rpmbuild/SRPMS/*.rpm /home/dlk/rpmbuild/SRPMS/
fi
